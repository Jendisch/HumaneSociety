#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Humane_Society
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Humane_Society")]
	public partial class LINQtoSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTrait(Trait instance);
    partial void UpdateTrait(Trait instance);
    partial void DeleteTrait(Trait instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertHealth(Health instance);
    partial void UpdateHealth(Health instance);
    partial void DeleteHealth(Health instance);
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    partial void InsertRegister(Register instance);
    partial void UpdateRegister(Register instance);
    partial void DeleteRegister(Register instance);
    partial void InsertReceipt(Receipt instance);
    partial void UpdateReceipt(Receipt instance);
    partial void DeleteReceipt(Receipt instance);
    partial void InsertAdopter(Adopter instance);
    partial void UpdateAdopter(Adopter instance);
    partial void DeleteAdopter(Adopter instance);
    #endregion
		
		public LINQtoSQLDataContext() : 
				base(global::Humane_Society.Properties.Settings.Default.Humane_SocietyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Trait> Traits
		{
			get
			{
				return this.GetTable<Trait>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Health> Healths
		{
			get
			{
				return this.GetTable<Health>();
			}
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<Register> Registers
		{
			get
			{
				return this.GetTable<Register>();
			}
		}
		
		public System.Data.Linq.Table<Receipt> Receipts
		{
			get
			{
				return this.GetTable<Receipt>();
			}
		}
		
		public System.Data.Linq.Table<Adopter> Adopters
		{
			get
			{
				return this.GetTable<Adopter>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Traits")]
	public partial class Trait : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _traitId;
		
		private string _size;
		
		private string _activityLevel;
		
		private string _color;
		
		private System.Nullable<int> _animalId;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntraitIdChanging(int value);
    partial void OntraitIdChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnactivityLevelChanging(string value);
    partial void OnactivityLevelChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnanimalIdChanging(System.Nullable<int> value);
    partial void OnanimalIdChanged();
    #endregion
		
		public Trait()
		{
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_traitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int traitId
		{
			get
			{
				return this._traitId;
			}
			set
			{
				if ((this._traitId != value))
				{
					this.OntraitIdChanging(value);
					this.SendPropertyChanging();
					this._traitId = value;
					this.SendPropertyChanged("traitId");
					this.OntraitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(MAX)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityLevel", DbType="VarChar(MAX)")]
		public string activityLevel
		{
			get
			{
				return this._activityLevel;
			}
			set
			{
				if ((this._activityLevel != value))
				{
					this.OnactivityLevelChanging(value);
					this.SendPropertyChanging();
					this._activityLevel = value;
					this.SendPropertyChanged("activityLevel");
					this.OnactivityLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="VarChar(MAX)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animalId", DbType="Int")]
		public System.Nullable<int> animalId
		{
			get
			{
				return this._animalId;
			}
			set
			{
				if ((this._animalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnanimalIdChanging(value);
					this.SendPropertyChanging();
					this._animalId = value;
					this.SendPropertyChanged("animalId");
					this.OnanimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Trait", Storage="_Animal", ThisKey="animalId", OtherKey="animalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Traits.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Traits.Add(this);
						this._animalId = value.animalId;
					}
					else
					{
						this._animalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _roomId;
		
		private string _size;
		
		private System.Nullable<bool> _occupied;
		
		private System.Nullable<int> _animalId;
		
		private System.Nullable<int> _roomNumber;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroomIdChanging(int value);
    partial void OnroomIdChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnoccupiedChanging(System.Nullable<bool> value);
    partial void OnoccupiedChanged();
    partial void OnanimalIdChanging(System.Nullable<int> value);
    partial void OnanimalIdChanged();
    partial void OnroomNumberChanging(System.Nullable<int> value);
    partial void OnroomNumberChanged();
    #endregion
		
		public Room()
		{
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(MAX)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occupied", DbType="Bit")]
		public System.Nullable<bool> occupied
		{
			get
			{
				return this._occupied;
			}
			set
			{
				if ((this._occupied != value))
				{
					this.OnoccupiedChanging(value);
					this.SendPropertyChanging();
					this._occupied = value;
					this.SendPropertyChanged("occupied");
					this.OnoccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animalId", DbType="Int")]
		public System.Nullable<int> animalId
		{
			get
			{
				return this._animalId;
			}
			set
			{
				if ((this._animalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnanimalIdChanging(value);
					this.SendPropertyChanging();
					this._animalId = value;
					this.SendPropertyChanged("animalId");
					this.OnanimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomNumber", DbType="Int")]
		public System.Nullable<int> roomNumber
		{
			get
			{
				return this._roomNumber;
			}
			set
			{
				if ((this._roomNumber != value))
				{
					this.OnroomNumberChanging(value);
					this.SendPropertyChanging();
					this._roomNumber = value;
					this.SendPropertyChanged("roomNumber");
					this.OnroomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Room", Storage="_Animal", ThisKey="animalId", OtherKey="animalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._animalId = value.animalId;
					}
					else
					{
						this._animalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Health")]
	public partial class Health : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _healthId;
		
		private System.Nullable<bool> _receivedShots;
		
		private System.Nullable<decimal> _foodConsumptionPerWeek;
		
		private System.Nullable<int> _animalId;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhealthIdChanging(int value);
    partial void OnhealthIdChanged();
    partial void OnreceivedShotsChanging(System.Nullable<bool> value);
    partial void OnreceivedShotsChanged();
    partial void OnfoodConsumptionPerWeekChanging(System.Nullable<decimal> value);
    partial void OnfoodConsumptionPerWeekChanged();
    partial void OnanimalIdChanging(System.Nullable<int> value);
    partial void OnanimalIdChanged();
    #endregion
		
		public Health()
		{
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_healthId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int healthId
		{
			get
			{
				return this._healthId;
			}
			set
			{
				if ((this._healthId != value))
				{
					this.OnhealthIdChanging(value);
					this.SendPropertyChanging();
					this._healthId = value;
					this.SendPropertyChanged("healthId");
					this.OnhealthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receivedShots", DbType="Bit")]
		public System.Nullable<bool> receivedShots
		{
			get
			{
				return this._receivedShots;
			}
			set
			{
				if ((this._receivedShots != value))
				{
					this.OnreceivedShotsChanging(value);
					this.SendPropertyChanging();
					this._receivedShots = value;
					this.SendPropertyChanged("receivedShots");
					this.OnreceivedShotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodConsumptionPerWeek", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> foodConsumptionPerWeek
		{
			get
			{
				return this._foodConsumptionPerWeek;
			}
			set
			{
				if ((this._foodConsumptionPerWeek != value))
				{
					this.OnfoodConsumptionPerWeekChanging(value);
					this.SendPropertyChanging();
					this._foodConsumptionPerWeek = value;
					this.SendPropertyChanged("foodConsumptionPerWeek");
					this.OnfoodConsumptionPerWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animalId", DbType="Int")]
		public System.Nullable<int> animalId
		{
			get
			{
				return this._animalId;
			}
			set
			{
				if ((this._animalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnanimalIdChanging(value);
					this.SendPropertyChanging();
					this._animalId = value;
					this.SendPropertyChanged("animalId");
					this.OnanimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Health", Storage="_Animal", ThisKey="animalId", OtherKey="animalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Healths.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Healths.Add(this);
						this._animalId = value.animalId;
					}
					else
					{
						this._animalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animal")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _animalId;
		
		private string _name;
		
		private string _breed;
		
		private System.Nullable<decimal> _age;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<System.DateTime> _entryDate;
		
		private System.Nullable<bool> _adopted;
		
		private string _type;
		
		private System.Nullable<System.DateTime> _adoptedDate;
		
		private string _gender;
		
		private System.Nullable<int> _adoptiveParentId;
		
		private EntitySet<Trait> _Traits;
		
		private EntitySet<Room> _Rooms;
		
		private EntitySet<Health> _Healths;
		
		private EntitySet<Receipt> _Receipts;
		
		private EntitySet<Adopter> _Adopters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnanimalIdChanging(int value);
    partial void OnanimalIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbreedChanging(string value);
    partial void OnbreedChanged();
    partial void OnageChanging(System.Nullable<decimal> value);
    partial void OnageChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnentryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnentryDateChanged();
    partial void OnadoptedChanging(System.Nullable<bool> value);
    partial void OnadoptedChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnadoptedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnadoptedDateChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnadoptiveParentIdChanging(System.Nullable<int> value);
    partial void OnadoptiveParentIdChanged();
    #endregion
		
		public Animal()
		{
			this._Traits = new EntitySet<Trait>(new Action<Trait>(this.attach_Traits), new Action<Trait>(this.detach_Traits));
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			this._Healths = new EntitySet<Health>(new Action<Health>(this.attach_Healths), new Action<Health>(this.detach_Healths));
			this._Receipts = new EntitySet<Receipt>(new Action<Receipt>(this.attach_Receipts), new Action<Receipt>(this.detach_Receipts));
			this._Adopters = new EntitySet<Adopter>(new Action<Adopter>(this.attach_Adopters), new Action<Adopter>(this.detach_Adopters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int animalId
		{
			get
			{
				return this._animalId;
			}
			set
			{
				if ((this._animalId != value))
				{
					this.OnanimalIdChanging(value);
					this.SendPropertyChanging();
					this._animalId = value;
					this.SendPropertyChanged("animalId");
					this.OnanimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_breed", DbType="VarChar(MAX)")]
		public string breed
		{
			get
			{
				return this._breed;
			}
			set
			{
				if ((this._breed != value))
				{
					this.OnbreedChanging(value);
					this.SendPropertyChanging();
					this._breed = value;
					this.SendPropertyChanged("breed");
					this.OnbreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> entryDate
		{
			get
			{
				return this._entryDate;
			}
			set
			{
				if ((this._entryDate != value))
				{
					this.OnentryDateChanging(value);
					this.SendPropertyChanging();
					this._entryDate = value;
					this.SendPropertyChanged("entryDate");
					this.OnentryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adopted", DbType="Bit")]
		public System.Nullable<bool> adopted
		{
			get
			{
				return this._adopted;
			}
			set
			{
				if ((this._adopted != value))
				{
					this.OnadoptedChanging(value);
					this.SendPropertyChanging();
					this._adopted = value;
					this.SendPropertyChanged("adopted");
					this.OnadoptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(MAX)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adoptedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> adoptedDate
		{
			get
			{
				return this._adoptedDate;
			}
			set
			{
				if ((this._adoptedDate != value))
				{
					this.OnadoptedDateChanging(value);
					this.SendPropertyChanging();
					this._adoptedDate = value;
					this.SendPropertyChanged("adoptedDate");
					this.OnadoptedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adoptiveParentId", DbType="Int")]
		public System.Nullable<int> adoptiveParentId
		{
			get
			{
				return this._adoptiveParentId;
			}
			set
			{
				if ((this._adoptiveParentId != value))
				{
					this.OnadoptiveParentIdChanging(value);
					this.SendPropertyChanging();
					this._adoptiveParentId = value;
					this.SendPropertyChanged("adoptiveParentId");
					this.OnadoptiveParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Trait", Storage="_Traits", ThisKey="animalId", OtherKey="animalId")]
		public EntitySet<Trait> Traits
		{
			get
			{
				return this._Traits;
			}
			set
			{
				this._Traits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Room", Storage="_Rooms", ThisKey="animalId", OtherKey="animalId")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Health", Storage="_Healths", ThisKey="animalId", OtherKey="animalId")]
		public EntitySet<Health> Healths
		{
			get
			{
				return this._Healths;
			}
			set
			{
				this._Healths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Receipt", Storage="_Receipts", ThisKey="animalId", OtherKey="animalId")]
		public EntitySet<Receipt> Receipts
		{
			get
			{
				return this._Receipts;
			}
			set
			{
				this._Receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Adopter", Storage="_Adopters", ThisKey="animalId", OtherKey="adoptedAnimalId")]
		public EntitySet<Adopter> Adopters
		{
			get
			{
				return this._Adopters;
			}
			set
			{
				this._Adopters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Traits(Trait entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Traits(Trait entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Healths(Health entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Healths(Health entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Register")]
	public partial class Register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _registerId;
		
		private System.Nullable<double> _moneyInRegister;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnregisterIdChanging(int value);
    partial void OnregisterIdChanged();
    partial void OnmoneyInRegisterChanging(System.Nullable<double> value);
    partial void OnmoneyInRegisterChanged();
    #endregion
		
		public Register()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int registerId
		{
			get
			{
				return this._registerId;
			}
			set
			{
				if ((this._registerId != value))
				{
					this.OnregisterIdChanging(value);
					this.SendPropertyChanging();
					this._registerId = value;
					this.SendPropertyChanged("registerId");
					this.OnregisterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moneyInRegister", DbType="Float")]
		public System.Nullable<double> moneyInRegister
		{
			get
			{
				return this._moneyInRegister;
			}
			set
			{
				if ((this._moneyInRegister != value))
				{
					this.OnmoneyInRegisterChanging(value);
					this.SendPropertyChanging();
					this._moneyInRegister = value;
					this.SendPropertyChanged("moneyInRegister");
					this.OnmoneyInRegisterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receipts")]
	public partial class Receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _receiptId;
		
		private string _lastName;
		
		private string _firstName;
		
		private System.Nullable<double> _moneyPaid;
		
		private System.Nullable<int> _animalId;
		
		private System.Nullable<int> _adopterId;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<Adopter> _Adopter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreceiptIdChanging(int value);
    partial void OnreceiptIdChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnmoneyPaidChanging(System.Nullable<double> value);
    partial void OnmoneyPaidChanged();
    partial void OnanimalIdChanging(System.Nullable<int> value);
    partial void OnanimalIdChanged();
    partial void OnadopterIdChanging(System.Nullable<int> value);
    partial void OnadopterIdChanged();
    #endregion
		
		public Receipt()
		{
			this._Animal = default(EntityRef<Animal>);
			this._Adopter = default(EntityRef<Adopter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiptId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int receiptId
		{
			get
			{
				return this._receiptId;
			}
			set
			{
				if ((this._receiptId != value))
				{
					this.OnreceiptIdChanging(value);
					this.SendPropertyChanging();
					this._receiptId = value;
					this.SendPropertyChanged("receiptId");
					this.OnreceiptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(MAX)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(MAX)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moneyPaid", DbType="Float")]
		public System.Nullable<double> moneyPaid
		{
			get
			{
				return this._moneyPaid;
			}
			set
			{
				if ((this._moneyPaid != value))
				{
					this.OnmoneyPaidChanging(value);
					this.SendPropertyChanging();
					this._moneyPaid = value;
					this.SendPropertyChanged("moneyPaid");
					this.OnmoneyPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animalId", DbType="Int")]
		public System.Nullable<int> animalId
		{
			get
			{
				return this._animalId;
			}
			set
			{
				if ((this._animalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnanimalIdChanging(value);
					this.SendPropertyChanging();
					this._animalId = value;
					this.SendPropertyChanged("animalId");
					this.OnanimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adopterId", DbType="Int")]
		public System.Nullable<int> adopterId
		{
			get
			{
				return this._adopterId;
			}
			set
			{
				if ((this._adopterId != value))
				{
					if (this._Adopter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnadopterIdChanging(value);
					this.SendPropertyChanging();
					this._adopterId = value;
					this.SendPropertyChanged("adopterId");
					this.OnadopterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Receipt", Storage="_Animal", ThisKey="animalId", OtherKey="animalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Receipts.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Receipts.Add(this);
						this._animalId = value.animalId;
					}
					else
					{
						this._animalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Receipt", Storage="_Adopter", ThisKey="adopterId", OtherKey="adopterId", IsForeignKey=true)]
		public Adopter Adopter
		{
			get
			{
				return this._Adopter.Entity;
			}
			set
			{
				Adopter previousValue = this._Adopter.Entity;
				if (((previousValue != value) 
							|| (this._Adopter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adopter.Entity = null;
						previousValue.Receipts.Remove(this);
					}
					this._Adopter.Entity = value;
					if ((value != null))
					{
						value.Receipts.Add(this);
						this._adopterId = value.adopterId;
					}
					else
					{
						this._adopterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adopter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adopter")]
	public partial class Adopter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _adopterId;
		
		private System.Nullable<double> _phoneNumber;
		
		private System.Nullable<bool> _married;
		
		private System.Nullable<bool> _hasKids;
		
		private System.Nullable<int> _adoptedAnimalId;
		
		private string _email;
		
		private System.Nullable<System.DateTime> _adoptionDate;
		
		private System.Nullable<bool> _paidAdoptionFee;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _password;
		
		private EntitySet<Receipt> _Receipts;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnadopterIdChanging(int value);
    partial void OnadopterIdChanged();
    partial void OnphoneNumberChanging(System.Nullable<double> value);
    partial void OnphoneNumberChanged();
    partial void OnmarriedChanging(System.Nullable<bool> value);
    partial void OnmarriedChanged();
    partial void OnhasKidsChanging(System.Nullable<bool> value);
    partial void OnhasKidsChanged();
    partial void OnadoptedAnimalIdChanging(System.Nullable<int> value);
    partial void OnadoptedAnimalIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnadoptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnadoptionDateChanged();
    partial void OnpaidAdoptionFeeChanging(System.Nullable<bool> value);
    partial void OnpaidAdoptionFeeChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Adopter()
		{
			this._Receipts = new EntitySet<Receipt>(new Action<Receipt>(this.attach_Receipts), new Action<Receipt>(this.detach_Receipts));
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adopterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int adopterId
		{
			get
			{
				return this._adopterId;
			}
			set
			{
				if ((this._adopterId != value))
				{
					this.OnadopterIdChanging(value);
					this.SendPropertyChanging();
					this._adopterId = value;
					this.SendPropertyChanged("adopterId");
					this.OnadopterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="Float")]
		public System.Nullable<double> phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_married", DbType="Bit")]
		public System.Nullable<bool> married
		{
			get
			{
				return this._married;
			}
			set
			{
				if ((this._married != value))
				{
					this.OnmarriedChanging(value);
					this.SendPropertyChanging();
					this._married = value;
					this.SendPropertyChanged("married");
					this.OnmarriedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasKids", DbType="Bit")]
		public System.Nullable<bool> hasKids
		{
			get
			{
				return this._hasKids;
			}
			set
			{
				if ((this._hasKids != value))
				{
					this.OnhasKidsChanging(value);
					this.SendPropertyChanging();
					this._hasKids = value;
					this.SendPropertyChanged("hasKids");
					this.OnhasKidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adoptedAnimalId", DbType="Int")]
		public System.Nullable<int> adoptedAnimalId
		{
			get
			{
				return this._adoptedAnimalId;
			}
			set
			{
				if ((this._adoptedAnimalId != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnadoptedAnimalIdChanging(value);
					this.SendPropertyChanging();
					this._adoptedAnimalId = value;
					this.SendPropertyChanged("adoptedAnimalId");
					this.OnadoptedAnimalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adoptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> adoptionDate
		{
			get
			{
				return this._adoptionDate;
			}
			set
			{
				if ((this._adoptionDate != value))
				{
					this.OnadoptionDateChanging(value);
					this.SendPropertyChanging();
					this._adoptionDate = value;
					this.SendPropertyChanged("adoptionDate");
					this.OnadoptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidAdoptionFee", DbType="Bit")]
		public System.Nullable<bool> paidAdoptionFee
		{
			get
			{
				return this._paidAdoptionFee;
			}
			set
			{
				if ((this._paidAdoptionFee != value))
				{
					this.OnpaidAdoptionFeeChanging(value);
					this.SendPropertyChanging();
					this._paidAdoptionFee = value;
					this.SendPropertyChanged("paidAdoptionFee");
					this.OnpaidAdoptionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(MAX)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(MAX)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Receipt", Storage="_Receipts", ThisKey="adopterId", OtherKey="adopterId")]
		public EntitySet<Receipt> Receipts
		{
			get
			{
				return this._Receipts;
			}
			set
			{
				this._Receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Adopter", Storage="_Animal", ThisKey="adoptedAnimalId", OtherKey="animalId", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Adopters.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Adopters.Add(this);
						this._adoptedAnimalId = value.animalId;
					}
					else
					{
						this._adoptedAnimalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = this;
		}
		
		private void detach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = null;
		}
	}
}
#pragma warning restore 1591
